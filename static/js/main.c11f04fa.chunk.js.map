{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-item-form/index.js","components/add-item-form/add-item-form.js","components/app/index.js","components/app/app.js","reportWebVitals.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPannel","state","search","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","important","onDeleted","onToggleImportant","onToggleDone","title","onClick","TodoList","todos","emptyArray","length","todoItems","map","item","id","itemProps","empty","ItemStatusFilter","buttons","name","isActive","filter","onFilterChange","AddItemForm","onLabelChange","onSubmit","preventDefault","onAddItem","App","maxId","todoData","createNewItem","deleteItem","index","getIndex","slice","addItem","text","newItem","toggleProperty","items","el","toLowerCase","includes","findIndex","arr","propName","oldItem","filteredItems","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c11f04fa.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header col s12\">\r\n            <h1>My todo list</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AppHeader;","import SearchPannel from \"./search-panel\";\r\n\r\nexport default SearchPannel;","import React, {Component} from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPannel extends Component {\r\n    state = {\r\n        search: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const search = e.target.value;\r\n        this.setState({search});\r\n        this.props.onSearchChange(search);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-panel col s6\">\r\n                <input type=\"text\"\r\n                       placeholder=\"Search\"\r\n                       value={this.state.search}\r\n                       onChange={this.onSearchChange}/>\r\n            </div>\r\n        )\r\n    }\r\n};","import TodoListItem from \"./todo-list-item\";\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n        const {label, done, important, onDeleted, onToggleImportant, onToggleDone} = this.props;\r\n\r\n        let className = 'todo-list-item';\r\n\r\n        if(done) {\r\n            className += ' done'\r\n        }\r\n\r\n        if(important) {\r\n            className += ' important'\r\n        }\r\n\r\n        return (\r\n            <div className={className}>\r\n                <span className=\"todo-list-item-label\"\r\n                      title={label}\r\n                      onClick={ onToggleDone }>{label}\r\n                </span>\r\n                <button type=\"button\"\r\n                        className=\"btn transparent\"\r\n                        onClick={ onToggleImportant }>\r\n                    <i className=\"material-icons\">flash_on</i>\r\n                </button>\r\n                <button type=\"button\"\r\n                        className=\"btn red lighten-1\"\r\n                        onClick={ onDeleted }>\r\n                    <i className=\"material-icons\">cancel</i>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import TodoList from \"./todo-list\";\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from \"../todo-list-item\";\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, onDeleted, onToggleImportant, onToggleDone}) => {\r\n\r\n    const emptyArray =  todos !== 'undefined' && todos.length > 0;\r\n\r\n    const todoItems = todos.map((item) => {\r\n\r\n            const { id, ...itemProps } = item;\r\n\r\n            return (\r\n                <li key={id} className=\"list-group-item collection-item\">\r\n                    <TodoListItem { ...itemProps }\r\n                                  onDeleted={ () => { onDeleted(id) }}\r\n                                  onToggleImportant={ () => { onToggleImportant(id) }}\r\n                                  onToggleDone={ () => { onToggleDone(id) }}/>\r\n                </li>\r\n            )\r\n        }\r\n    );\r\n\r\n    const empty = <li className=\"list-group-item collection-item empty\">Empty</li>;\r\n\r\n    return (\r\n        <div className=\"list-group col s12\">\r\n            <ul className=\"todo-list collection\">\r\n                { emptyArray ? todoItems : empty }\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from \"./item-status-filter\";\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'all'},\r\n        {name: 'active', label: 'active'},\r\n        {name: 'done', label: 'done'}\r\n    ];\r\n\r\n    render() {\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n        const isActive = this.props.filter === label;\r\n        return (\r\n            <button type=\"button\"\r\n                    className={`btn transparent ${ isActive && 'active' }`}\r\n                    key={name}\r\n                    onClick={() => {\r\n                        this.props.onFilterChange(name)\r\n                    }}>{label}\r\n            </button>\r\n        )\r\n        });\r\n\r\n        return (\r\n            <div className=\"item-status-filter col s6\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import AddItemForm from \"./add-item-form\";\r\n\r\nexport default AddItemForm;","import React, {Component} from 'react';\r\nimport './add-item-form.css';\r\n\r\nexport default class AddItemForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const empty = '';\r\n        if( this.state.label !== empty ){\r\n            this.props.onAddItem(this.state.label);\r\n            this.setState({\r\n                label: empty\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"add-item-form col s12\"\r\n                  onSubmit={this.onSubmit}>\r\n                <input type=\"text\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"Add new task\"\r\n                       value={this.state.label}/>\r\n                <button className=\"btn-floating waves-effect waves-light teal lighten-1 add-item-btn\">\r\n                    <i className=\"material-icons\">add</i>\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n};","import App from \"./app\";\r\n\r\nexport default App;","import './app.css';\r\nimport React, {Component} from 'react';\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPannel from \"../search-panel\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport AddItemForm from \"../add-item-form\";\r\n\r\nexport default class App extends Component {\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createNewItem('Learn HTML', false, true),\r\n            this.createNewItem('Learn CSS', false, true),\r\n            this.createNewItem('Learn JavaScript', false, true),\r\n            this.createNewItem('Learn Jquery', false, true),\r\n            this.createNewItem('Learn React', true, true),\r\n            this.createNewItem('Learn Redux', true, true),\r\n            this.createNewItem('Find a job', true, false)\r\n        ],\r\n        search: '',\r\n        filter: 'all'\r\n    };\r\n\r\n    getIndex(id) {\r\n        return (\r\n            this.state.todoData.findIndex((el) => el.id === id)\r\n        )\r\n    }\r\n\r\n    createNewItem(label, important, done) {\r\n        return {\r\n            label: label,\r\n            important: important,\r\n            done: done,\r\n            id: this.maxId++\r\n        }\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const index = this.getIndex(id);\r\n            const newTodoData = [\r\n                ...todoData.slice(0, index),\r\n                ...todoData.slice(index + 1)\r\n            ];\r\n            return {\r\n                todoData: newTodoData\r\n            }\r\n        })\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createNewItem(text);\r\n        this.setState(({todoData}) => {\r\n            const newTodoData = [\r\n                ...todoData, newItem\r\n            ];\r\n            return {\r\n                todoData: newTodoData\r\n            }\r\n        })\r\n    };\r\n\r\n    toggleProperty(arr, id, propName) {\r\n        const index = this.getIndex(id);\r\n\r\n        const oldItem = arr[index];\r\n        const newItem = {\r\n            ...oldItem,\r\n            [propName]: !oldItem[propName]\r\n        };\r\n\r\n        return [\r\n            ...arr.slice(0, index),\r\n            newItem,\r\n            ...arr.slice(index + 1)\r\n        ]\r\n    }\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => ({\r\n            todoData: this.toggleProperty(todoData, id, 'done')\r\n        }));\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => ({\r\n            todoData: this.toggleProperty(todoData, id, 'important')\r\n        }));\r\n    };\r\n\r\n    onSearchChange = (search) => {\r\n        this.setState({search})\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter})\r\n    };\r\n\r\n    search = (items, filter) => {\r\n        if (filter.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter(el => {\r\n            return el.label.toLowerCase().includes(filter.toLowerCase())\r\n        });\r\n    };\r\n\r\n    filter = (items, filter) => {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n            case 'done':\r\n                return items.filter(item => item.done);\r\n            case 'active':\r\n                return items.filter(item => !item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {todoData, search, filter} = this.state;\r\n        const done = todoData.filter(el => el.done).length;\r\n        const toDo = todoData.length - done;\r\n        const filteredItems = this.filter(\r\n            this.search(todoData, search), filter);\r\n\r\n        return (\r\n            <div className=\"app row\">\r\n                <AppHeader toDo={toDo} done={done}/>\r\n                <SearchPannel onSearchChange={this.onSearchChange}/>\r\n                <ItemStatusFilter filter={this.state.filter} onFilterChange={this.onFilterChange}/>\r\n                <TodoList todos={filteredItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}/>\r\n                <AddItemForm onAddItem={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}